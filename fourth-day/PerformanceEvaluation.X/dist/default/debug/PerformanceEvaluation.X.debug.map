Microchip MPLAB XC8 Compiler V2.10 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.10\pic\dat\en_msgs.txt \
  -cs -h+dist/default/debug\PerformanceEvaluation.X.debug.sym \
  --cmf=dist/default/debug\PerformanceEvaluation.X.debug.cmf -z -Q18F4520 \
  -oC:\Users\lucas\AppData\Local\Temp\s11g.2 \
  -Mdist/default/debug/PerformanceEvaluation.X.debug.map -E1 -ver=XC8 \
  -ASTACK=080h-05FFh -pstack=STACK -ACODE=00h-07FFFh -ACONST=00h-07FFFh \
  -ASMALLCONST=0600h-06FFhx122 -AMEDIUMCONST=0600h-07FFFh -ACOMRAM=01h-07Fh \
  -AABS1=00h-05FFh -ABIGRAM=01h-05FFh -ARAM=080h-0FFh,0100h-01FFhx5 \
  -ABANK0=080h-0FFh -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh \
  -ABANK3=0300h-03FFh -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh \
  -ASFR=0F80h-0FFFh -preset_vec=00h,intcode,intcodelo,powerup,init \
  -pramtop=0600h -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST \
  -pconst=CONST -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\lucas\AppData\Local\Temp\s11g.obj \
  dist/default/debug\PerformanceEvaluation.X.debug.obj 

Object code version is 3.11

Machine type is 18F4520

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\lucas\AppData\Local\Temp\s11g.obj
                init                                  0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/debug\PerformanceEvaluation.X.debug.obj
                smallconst                          600      600       1E      300       0
                text16                              D88      D88       AE      30F       0
                text15                              AF6      AF6       E6      30F       0
                text14                             11EE     11EE       24      30F       0
                text13                              85A      85A      1A8      30F       0
                text12                             11AE     11AE       40      30F       0
                text11                              A02      A02       F4      30F       0
                text10                              EDC      EDC       96      30F       0
                text9                               FF6      FF6       78      30F       0
                text8                              106E     106E       74      30F       0
                text7                               CB6      CB6       D2      30F       0
                text6                              10E2     10E2       6A      30F       0
                text5                               BDC      BDC       DA      30F       0
                text4                               61E      61E      23C      30F       0
                text3                               F72      F72       84      30F       0
                text2                              114C     114C       62      30F       0
                text1                               E36      E36       A6      30F       0
                text0                              1224     1224        8      30F       0
                cstackCOMRAM                          1        1       5B        1       1
                bssCOMRAM                            5C       5C        2        1       1
                cinit                              1212     1212       12      30F       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                init                                  0        0        4         0
                text16                              D88      D88       AE         0
                text15                              AF6      AF6       E6         0
                text14                             11EE     11EE       24         0
                text13                              85A      85A      1A8         0
                text12                             11AE     11AE       40         0
                text11                              A02      A02       F4         0
                text10                              EDC      EDC       96         0
                text9                               FF6      FF6       78         0
                text8                              106E     106E       74         0
                text7                               CB6      CB6       D2         0
                text6                              10E2     10E2       6A         0
                text5                               BDC      BDC       DA         0
                text4                               61E      61E      23C         0
                text3                               F72      F72       84         0
                text2                              114C     114C       62         0
                text1                               E36      E36       A6         0
                text0                              1224     1224        8         0
                cinit                              1212     1212       12         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          600      600       1E         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                cstackCOMRAM                          1        1       5B         1
                bssCOMRAM                            5C       5C        2         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00005D  00005E         1       1  COMRAM  
                smallconst                     000600  00001E  00061E       300       0  SMALLCON
                text4                          00061E  000C0E  00122C       30F       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000080-0000FF               80
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BIGRAM           00005E-0005FF              5A2
        CODE             000004-0005FF              5FC
                         00122C-007FFF             6DD4
        COMRAM           00005E-00007F               22
        CONST            000004-0005FF              5FC
                         00122C-007FFF             6DD4
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      00122C-007FFF             6DD4
        RAM              000080-0005FF              100
        SFR              000F80-000FFF               80
        SMALLCONST       00122C-007FFF              100
        STACK            000080-0005FF              580

                                  Symbol Table

?___altoft               cstackCOMRAM 000010
?___ftadd                cstackCOMRAM 000018
?___ftdiv                cstackCOMRAM 00002E
?___ftmul                cstackCOMRAM 000009
?___ftneg                cstackCOMRAM 000001
?___ftpack               cstackCOMRAM 000001
?___ftsub                cstackCOMRAM 00002C
?___fttol                cstackCOMRAM 000001
?_cos                    cstackCOMRAM 00004A
?_eval_poly              cstackCOMRAM 000024
?_floor                  cstackCOMRAM 000024
?_sin                    cstackCOMRAM 00003D
?_tan                    cstackCOMRAM 000050
__HRAM                   (abs)        000000
__Habs1                  abs1         000000
__Hbank0                 bank0        000000
__Hbank1                 bank1        000000
__Hbank2                 bank2        000000
__Hbank3                 bank3        000000
__Hbank4                 bank4        000000
__Hbank5                 bank5        000000
__Hbigbss                bigbss       000000
__Hbigdata               bigdata      000000
__Hbigram                bigram       000000
__Hbss                   bss          000000
__HbssCOMRAM             bssCOMRAM    000000
__Hcinit                 cinit        000000
__Hclrtext               clrtext      000000
__Hcomram                comram       000000
__Hconfig                config       30000E
__Hconst                 const        000000
__HcstackCOMRAM          cstackCOMRAM 000000
__Hdata                  data         000000
__Heeprom_data           eeprom_data  000000
__Hfarbss                farbss       000000
__Hfardata               fardata      000000
__Hibigdata              ibigdata     000000
__Hidata                 idata        000000
__Hidloc                 idloc        200008
__Hifardata              ifardata     000000
__Hinit                  init         000004
__Hintcode               intcode      000000
__Hintcode_body          intcode_body 000000
__Hintcodelo             intcodelo    000000
__Hintentry              intentry     000000
__Hintret                intret       000000
__Hintsave_regs          intsave_regs 000000
__Hirdata                irdata       000000
__Hmediumconst           mediumconst  000000
__HnvFARRAM              nvFARRAM     000000
__Hnvbit                 nvbit        000000
__Hnvrram                nvrram       000000
__Hparam                 rparam       000000
__Hpowerup               powerup      000000
__Hram                   ram          000000
__Hramtop                ramtop       000600
__Hrbit                  rbit         000000
__Hrbss                  rbss         000000
__Hrdata                 rdata        000000
__Hreset_vec             reset_vec    000000
__Hrparam                rparam       000000
__Hsfr                   sfr          000000
__Hsmallconst            smallconst   00061E
__Hspace_0               (abs)        30000E
__Hspace_1               (abs)        00005E
__Hspace_2               (abs)        000000
__Hstack                 stack        000000
__Hstruct                struct       000000
__Htemp                  temp         000000
__Htext                  text         000000
__Htext0                 text0        000000
__Htext1                 text1        000000
__Htext10                text10       000000
__Htext11                text11       000000
__Htext12                text12       000000
__Htext13                text13       000000
__Htext14                text14       000000
__Htext15                text15       000000
__Htext16                text16       000000
__Htext2                 text2        000000
__Htext3                 text3        000000
__Htext4                 text4        000000
__Htext5                 text5        000000
__Htext6                 text6        000000
__Htext7                 text7        000000
__Htext8                 text8        000000
__Htext9                 text9        000000
__LRAM                   (abs)        000001
__Labs1                  abs1         000000
__Lbank0                 bank0        000000
__Lbank1                 bank1        000000
__Lbank2                 bank2        000000
__Lbank3                 bank3        000000
__Lbank4                 bank4        000000
__Lbank5                 bank5        000000
__Lbigbss                bigbss       000000
__Lbigdata               bigdata      000000
__Lbigram                bigram       000000
__Lbss                   bss          000000
__LbssCOMRAM             bssCOMRAM    000000
__Lcinit                 cinit        000000
__Lclrtext               clrtext      000000
__Lcomram                comram       000000
__Lconfig                config       300000
__Lconst                 const        000000
__LcstackCOMRAM          cstackCOMRAM 000000
__Ldata                  data         000000
__Leeprom_data           eeprom_data  000000
__Lfarbss                farbss       000000
__Lfardata               fardata      000000
__Libigdata              ibigdata     000000
__Lidata                 idata        000000
__Lidloc                 idloc        200000
__Lifardata              ifardata     000000
__Linit                  init         000000
__Lintcode               intcode      000000
__Lintcode_body          intcode_body 000000
__Lintcodelo             intcodelo    000000
__Lintentry              intentry     000000
__Lintret                intret       000000
__Lintsave_regs          intsave_regs 000000
__Lirdata                irdata       000000
__Lmediumconst           mediumconst  000000
__LnvFARRAM              nvFARRAM     000000
__Lnvbit                 nvbit        000000
__Lnvrram                nvrram       000000
__Lparam                 rparam       000000
__Lpowerup               powerup      000000
__Lram                   ram          000000
__Lramtop                ramtop       000600
__Lrbit                  rbit         000000
__Lrbss                  rbss         000000
__Lrdata                 rdata        000000
__Lreset_vec             reset_vec    000000
__Lrparam                rparam       000000
__Lsfr                   sfr          000000
__Lsmallconst            smallconst   000600
__Lspace_0               (abs)        000000
__Lspace_1               (abs)        000000
__Lspace_2               (abs)        000000
__Lstack                 stack        000000
__Lstruct                struct       000000
__Ltemp                  temp         000000
__Ltext                  text         000000
__Ltext0                 text0        000000
__Ltext1                 text1        000000
__Ltext10                text10       000000
__Ltext11                text11       000000
__Ltext12                text12       000000
__Ltext13                text13       000000
__Ltext14                text14       000000
__Ltext15                text15       000000
__Ltext16                text16       000000
__Ltext2                 text2        000000
__Ltext3                 text3        000000
__Ltext4                 text4        000000
__Ltext5                 text5        000000
__Ltext6                 text6        000000
__Ltext7                 text7        000000
__Ltext8                 text8        000000
__Ltext9                 text9        000000
__S0                     (abs)        30000E
__S1                     (abs)        00005E
__S2                     (abs)        000000
___altoft                text9        000FF6
___altoft@c              cstackCOMRAM 000010
___altoft@exp            cstackCOMRAM 000018
___altoft@sign           cstackCOMRAM 000019
___ftadd                 text13       00085A
___ftadd@exp1            cstackCOMRAM 000023
___ftadd@exp2            cstackCOMRAM 000022
___ftadd@f1              cstackCOMRAM 000018
___ftadd@f2              cstackCOMRAM 00001B
___ftadd@sign            cstackCOMRAM 000021
___ftdiv                 text15       000AF6
___ftdiv@cntr            cstackCOMRAM 000037
___ftdiv@exp             cstackCOMRAM 00003B
___ftdiv@f1              cstackCOMRAM 00002E
___ftdiv@f2              cstackCOMRAM 000031
___ftdiv@f3              cstackCOMRAM 000038
___ftdiv@sign            cstackCOMRAM 00003C
___ftge                  text8        00106E
___ftge@ff1              cstackCOMRAM 000001
___ftge@ff2              cstackCOMRAM 000004
___ftmul                 text11       000A02
___ftmul@cntr            cstackCOMRAM 000016
___ftmul@exp             cstackCOMRAM 000012
___ftmul@f1              cstackCOMRAM 000009
___ftmul@f2              cstackCOMRAM 00000C
___ftmul@f3_as_product   cstackCOMRAM 000013
___ftmul@sign            cstackCOMRAM 000017
___ftneg                 text14       0011EE
___ftneg@f1              cstackCOMRAM 000001
___ftpack                text16       000D88
___ftpack@arg            cstackCOMRAM 000001
___ftpack@exp            cstackCOMRAM 000004
___ftpack@sign           cstackCOMRAM 000005
___ftsub                 text12       0011AE
___ftsub@f1              cstackCOMRAM 00002C
___ftsub@f2              cstackCOMRAM 00002F
___fttol                 text7        000CB6
___fttol@exp1            cstackCOMRAM 00000F
___fttol@f1              cstackCOMRAM 000001
___fttol@lval            cstackCOMRAM 00000B
___fttol@sign1           cstackCOMRAM 00000A
___inthi_sp              stack        000000
___intlo_sp              stack        000000
___param_bank            (abs)        000000
___rparam_used           (abs)        000001
___sp                    stack        000000
__accesstop              (abs)        000080
__activetblptr           (abs)        000001
__end_of___altoft        text9        00106E
__end_of___ftadd         text13       000A02
__end_of___ftdiv         text15       000BDC
__end_of___ftge          text8        0010E2
__end_of___ftmul         text11       000AF6
__end_of___ftneg         text14       001212
__end_of___ftpack        text16       000E36
__end_of___ftsub         text12       0011EE
__end_of___fttol         text7        000D88
__end_of__initialization cinit        001216
__end_of_cos             text3        000FF6
__end_of_eval_poly       text10       000F72
__end_of_floor           text5        000CB6
__end_of_frexp           text6        00114C
__end_of_main            text0        00122C
__end_of_sin             text4        00085A
__end_of_tan             text2        0011AE
__end_of_trigonometry    text1        000EDC
__end_ofsin@coeff_a      smallconst   000610
__end_ofsin@coeff_b      smallconst   00061C
__initialization         cinit        001212
__mediumconst            mediumconst  000000
__pbssCOMRAM             bssCOMRAM    00005C
__pcinit                 cinit        001212
__pcstackCOMRAM          cstackCOMRAM 000001
__psmallconst            smallconst   000600
__ptext0                 text0        001224
__ptext1                 text1        000E36
__ptext10                text10       000EDC
__ptext11                text11       000A02
__ptext12                text12       0011AE
__ptext13                text13       00085A
__ptext14                text14       0011EE
__ptext15                text15       000AF6
__ptext16                text16       000D88
__ptext2                 text2        00114C
__ptext3                 text3        000F72
__ptext4                 text4        00061E
__ptext5                 text5        000BDC
__ptext6                 text6        0010E2
__ptext7                 text7        000CB6
__ptext8                 text8        00106E
__ptext9                 text9        000FF6
__ramtop                 ramtop       000600
__size_of___altoft       (abs)        000000
__size_of___ftadd        (abs)        000000
__size_of___ftdiv        (abs)        000000
__size_of___ftge         (abs)        000000
__size_of___ftmul        (abs)        000000
__size_of___ftneg        (abs)        000000
__size_of___ftpack       (abs)        000000
__size_of___ftsub        (abs)        000000
__size_of___fttol        (abs)        000000
__size_of_cos            (abs)        000000
__size_of_eval_poly      (abs)        000000
__size_of_floor          (abs)        000000
__size_of_frexp          (abs)        000000
__size_of_main           (abs)        000000
__size_of_sin            (abs)        000000
__size_of_tan            (abs)        000000
__size_of_trigonometry   (abs)        000000
__smallconst             smallconst   000600
_cos                     text3        000F72
_cos$738                 cstackCOMRAM 00004D
_errno                   bssCOMRAM    00005C
_eval_poly               text10       000EDC
_floor                   text5        000BDC
_frexp                   text6        0010E2
_main                    text0        001224
_sin                     text4        00061E
_sin$739                 cstackCOMRAM 000043
_tan                     text2        00114C
_tan$740                 cstackCOMRAM 000053
_tan$741                 cstackCOMRAM 000056
_trigonometry            text1        000E36
cos@f                    cstackCOMRAM 00004A
end_of_initialization    cinit        001216
eval_poly@d              cstackCOMRAM 000027
eval_poly@n              cstackCOMRAM 000028
eval_poly@res            cstackCOMRAM 00002B
eval_poly@x              cstackCOMRAM 000024
floor@expon              cstackCOMRAM 00002A
floor@i                  cstackCOMRAM 000027
floor@x                  cstackCOMRAM 000024
frexp@eptr               cstackCOMRAM 000004
frexp@value              cstackCOMRAM 000001
intlevel0                text         000000
intlevel1                text         000000
intlevel2                text         000000
intlevel3                text         000000
sin@coeff_a              smallconst   000601
sin@coeff_b              smallconst   000610
sin@f                    cstackCOMRAM 00003D
sin@sgn                  cstackCOMRAM 000049
sin@x2                   cstackCOMRAM 000046
sin@y                    cstackCOMRAM 000040
stackhi                  (abs)        0005FF
stacklo                  (abs)        000080
start                    init         000000
start_initialization     cinit        001212
tan@x                    cstackCOMRAM 000050


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 13 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_trigonometry
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _trigonometry *****************
 Defined at:
		line 17 in file "Tests.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  v               3    0        float 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         0       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_cos
		_sin
		_tan
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _tan *****************
 Defined at:
		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\tan.c"
 Parameters:    Size  Location     Type
  x               3   79[COMRAM] void 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   79[COMRAM] void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___ftdiv
		_cos
		_sin
 This function is called by:
		_trigonometry
 This function uses a non-reentrant model


 *************** function _cos *****************
 Defined at:
		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\cos.c"
 Parameters:    Size  Location     Type
  f               3   73[COMRAM] void 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   73[COMRAM] void 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___ftadd
		___ftge
		_sin
 This function is called by:
		_trigonometry
		_tan
 This function uses a non-reentrant model


 *************** function _sin *****************
 Defined at:
		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sin.c"
 Parameters:    Size  Location     Type
  f               3   60[COMRAM] void 
 Auto vars:     Size  Location     Type
  x2              3   69[COMRAM] void 
  y               3   63[COMRAM] void 
  sgn             1   72[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   60[COMRAM] unsigned char 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:        10       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:        13       0       0       0       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftdiv
		___ftge
		___ftmul
		___ftneg
		___ftsub
		_eval_poly
		_floor
 This function is called by:
		_trigonometry
		_cos
		_tan
 This function uses a non-reentrant model


 *************** function _floor *****************
 Defined at:
		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\floor.c"
 Parameters:    Size  Location     Type
  x               3   35[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  i               3   38[COMRAM] unsigned char 
  expon           2   41[COMRAM] int 
 Return value:  Size  Location     Type
                  3   35[COMRAM] int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         5       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___altoft
		___ftadd
		___ftge
		___fttol
		_frexp
 This function is called by:
		_sin
 This function uses a non-reentrant model


 *************** function _frexp *****************
 Defined at:
		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\frexp.c"
 Parameters:    Size  Location     Type
  value           3    0[COMRAM] int 
  eptr            1    3[COMRAM] PTR int 
		 -> floor@expon(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] PTR int 
 Registers used:
		wreg, fsr2l, fsr2h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_floor
 This function uses a non-reentrant model


 *************** function ___fttol *****************
 Defined at:
		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fttol.c"
 Parameters:    Size  Location     Type
  f1              3    0[COMRAM] float 
 Auto vars:     Size  Location     Type
  lval            4   10[COMRAM] unsigned long 
  exp1            1   14[COMRAM] unsigned char 
  sign1           1    9[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  4    0[COMRAM] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0
      Temps:          5       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_floor
 This function uses a non-reentrant model


 *************** function ___ftge *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftge.c"
 Parameters:    Size  Location     Type
  ff1             3    0[COMRAM] float 
  ff2             3    3[COMRAM] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:         9       0       0       0       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_cos
		_sin
		_floor
 This function uses a non-reentrant model


 *************** function ___altoft *****************
 Defined at:
		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\altoft.c"
 Parameters:    Size  Location     Type
  c               4   15[COMRAM] long 
 Auto vars:     Size  Location     Type
  sign            1   24[COMRAM] unsigned char 
  exp             1   23[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   15[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         4       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0
      Temps:          4       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_floor
 This function uses a non-reentrant model


 *************** function _eval_poly *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\evalpoly.c"
 Parameters:    Size  Location     Type
  x               3   35[COMRAM] float 
  d               1   38[COMRAM] PTR const 
		 -> sin@coeff_a(15), sin@coeff_b(12), 
  n               2   39[COMRAM] int 
 Auto vars:     Size  Location     Type
  res             3   42[COMRAM] int 
 Return value:  Size  Location     Type
                  3   35[COMRAM] int 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0
      Totals:        10       0       0       0       0       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___ftadd
		___ftmul
 This function is called by:
		_sin
 This function uses a non-reentrant model


 *************** function ___ftmul *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftmul.c"
 Parameters:    Size  Location     Type
  f1              3    8[COMRAM] float 
  f2              3   11[COMRAM] float 
 Auto vars:     Size  Location     Type
  f3_as_produc    3   18[COMRAM] unsigned um
  sign            1   22[COMRAM] unsigned char 
  cntr            1   21[COMRAM] unsigned char 
  exp             1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3    8[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_sin
		_eval_poly
 This function uses a non-reentrant model


 *************** function ___ftsub *****************
 Defined at:
		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftsub.c"
 Parameters:    Size  Location     Type
  f1              3   43[COMRAM] float 
  f2              3   46[COMRAM] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   43[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		___ftadd
 This function is called by:
		_sin
 This function uses a non-reentrant model


 *************** function ___ftadd *****************
 Defined at:
		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftadd.c"
 Parameters:    Size  Location     Type
  f1              3   23[COMRAM] float 
  f2              3   26[COMRAM] float 
 Auto vars:     Size  Location     Type
  exp1            1   34[COMRAM] unsigned char 
  exp2            1   33[COMRAM] unsigned char 
  sign            1   32[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   23[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         3       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:        12       0       0       0       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		___ftsub
		_cos
		_eval_poly
		_floor
 This function uses a non-reentrant model


 *************** function ___ftneg *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftneg.c"
 Parameters:    Size  Location     Type
  f1              3    0[COMRAM] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         3       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sin
 This function uses a non-reentrant model


 *************** function ___ftdiv *****************
 Defined at:
		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdiv.c"
 Parameters:    Size  Location     Type
  f1              3   45[COMRAM] float 
  f2              3   48[COMRAM] float 
 Auto vars:     Size  Location     Type
  f3              3   55[COMRAM] float 
  sign            1   59[COMRAM] unsigned char 
  exp             1   58[COMRAM] unsigned char 
  cntr            1   54[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  3   45[COMRAM] float 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         6       0       0       0       0       0       0
      Locals:         6       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:        15       0       0       0       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___ftpack
 This function is called by:
		_sin
		_tan
 This function uses a non-reentrant model


 *************** function ___ftpack *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\float.c"
 Parameters:    Size  Location     Type
  arg             3    0[COMRAM] unsigned um
  exp             1    3[COMRAM] unsigned char 
  sign            1    4[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[COMRAM] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
      Params:         5       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		___altoft
		___ftadd
		___ftdiv
		___ftmul
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdiv.c
		___ftdiv       		CODE           	0AF6	0000	231

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdiv.c estimated size: 231

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\cos.c
		_cos           		CODE           	0F72	0000	133

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\cos.c estimated size: 133

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\evalpoly.c
		_eval_poly     		CODE           	0EDC	0000	151

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\evalpoly.c estimated size: 151

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fttol.c
		___fttol       		CODE           	0CB6	0000	211

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fttol.c estimated size: 211

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\tan.c
		_tan           		CODE           	114C	0000	99

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\tan.c estimated size: 99

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftadd.c
		___ftadd       		CODE           	085A	0000	425

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftadd.c estimated size: 425

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftneg.c
		___ftneg       		CODE           	11EE	0000	37

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftneg.c estimated size: 37

shared
		__initialization		CODE           	1212	0000	5
		sin@coeff_a    		SMALLCONST     	0601	0000	16
		sin@coeff_b    		SMALLCONST     	0610	0000	13

shared estimated size: 34

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sin.c
		_sin           		CODE           	061E	0000	573

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sin.c estimated size: 573

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftsub.c
		___ftsub       		CODE           	11AE	0000	65

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftsub.c estimated size: 65

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\float.c
		___ftpack      		CODE           	0D88	0000	175

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\float.c estimated size: 175

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\altoft.c
		___altoft      		CODE           	0FF6	0000	121

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\altoft.c estimated size: 121

Tests.c
		_trigonometry  		CODE           	0E36	0000	167

Tests.c estimated size: 167

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftge.c
		___ftge        		CODE           	106E	0000	117

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftge.c estimated size: 117

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\frexp.c
		_frexp         		CODE           	10E2	0000	107

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\frexp.c estimated size: 107

main.c
		_main          		CODE           	1224	0000	9

main.c estimated size: 9

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\floor.c
		_floor         		CODE           	0BDC	0000	219

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\floor.c estimated size: 219

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftmul.c
		___ftmul       		CODE           	0A02	0000	245

C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftmul.c estimated size: 245

