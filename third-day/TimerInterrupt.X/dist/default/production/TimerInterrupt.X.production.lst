

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Feb 04 14:38:25 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intcode,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13  0000                     
    14                           ; Version 2.10
    15                           ; Generated 31/07/2019 GMT
    16                           ; 
    17                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4520 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _TMR1	set	4046
    49  0000                     _INTCONbits	set	4082
    50  0000                     _TRISBbits	set	3987
    51  0000                     _T1CONbits	set	4045
    52  0000                     _LATBbits	set	3978
    53  0000                     _PIE1bits	set	3997
    54  0000                     _PIR1bits	set	3998
    55                           
    56                           ; #config settings
    57  0000                     
    58                           	psect	cinit
    59  000060                     __pcinit:
    60                           	opt callstack 0
    61  000060                     start_initialization:
    62                           	opt callstack 0
    63  000060                     __initialization:
    64                           	opt callstack 0
    65  000060                     end_of_initialization:
    66                           	opt callstack 0
    67  000060                     __end_of__initialization:
    68                           	opt callstack 0
    69  000060  9002               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    70  000062  9202               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    71  000064  0100               	movlb	0
    72  000066  EF1F  F000         	goto	_main	;jump to C main() function
    73                           
    74                           	psect	cstackCOMRAM
    75  000001                     __pcstackCOMRAM:
    76                           	opt callstack 0
    77  000001                     ??_TMR1Int:
    78  000001                     
    79                           ; 1 bytes @ 0x0
    80  000001                     	ds	1
    81  000002                     
    82                           ; 1 bytes @ 0x1
    83 ;;
    84 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    85 ;;
    86 ;; *************** function _main *****************
    87 ;; Defined at:
    88 ;;		line 21 in file "main.c"
    89 ;; Parameters:    Size  Location     Type
    90 ;;		None
    91 ;; Auto vars:     Size  Location     Type
    92 ;;		None
    93 ;; Return value:  Size  Location     Type
    94 ;;                  1    wreg      void 
    95 ;; Registers used:
    96 ;;		wreg, status,2
    97 ;; Tracked objects:
    98 ;;		On entry : 0/0
    99 ;;		On exit  : 0/0
   100 ;;		Unchanged: 0/0
   101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   102 ;;      Params:         0       0       0       0       0       0       0
   103 ;;      Locals:         0       0       0       0       0       0       0
   104 ;;      Temps:          0       0       0       0       0       0       0
   105 ;;      Totals:         0       0       0       0       0       0       0
   106 ;;Total ram usage:        0 bytes
   107 ;; Hardware stack levels required when called:    1
   108 ;; This function calls:
   109 ;;		Nothing
   110 ;; This function is called by:
   111 ;;		Startup code after reset
   112 ;; This function uses a non-reentrant model
   113 ;;
   114                           
   115                           	psect	text0
   116  00003E                     __ptext0:
   117                           	opt callstack 0
   118  00003E                     _main:
   119                           	opt callstack 30
   120                           
   121                           ;main.c: 22: T1CONbits.RD16 = 1;
   122                           
   123                           ;incstack = 0
   124  00003E  8ECD               	bsf	205,7,c	;volatile
   125                           
   126                           ;main.c: 23: T1CONbits.T1RUN = 1;
   127  000040  8CCD               	bsf	205,6,c	;volatile
   128                           
   129                           ;main.c: 24: T1CONbits.T1CKPS = 0b00;
   130  000042  0ECF               	movlw	-49
   131  000044  16CD               	andwf	205,f,c	;volatile
   132                           
   133                           ;main.c: 25: T1CONbits.T1OSCEN = 1;
   134  000046  86CD               	bsf	205,3,c	;volatile
   135                           
   136                           ;main.c: 26: T1CONbits.T1SYNC = 1;
   137  000048  84CD               	bsf	205,2,c	;volatile
   138                           
   139                           ;main.c: 27: T1CONbits.TMR1CS = 1;
   140  00004A  82CD               	bsf	205,1,c	;volatile
   141                           
   142                           ;main.c: 28: T1CONbits.TMR1ON = 1;
   143  00004C  80CD               	bsf	205,0,c	;volatile
   144                           
   145                           ;main.c: 31: TRISBbits.RB0 = 0;
   146  00004E  9093               	bcf	147,0,c	;volatile
   147                           
   148                           ;main.c: 32: TMR1 = 0x8000;
   149  000050  0E80               	movlw	128
   150  000052  6ECF               	movwf	207,c	;volatile
   151  000054  0E00               	movlw	0
   152  000056  6ECE               	movwf	206,c	;volatile
   153                           
   154                           ;main.c: 34: PIE1bits.TMR1IE = 1;
   155  000058  809D               	bsf	157,0,c	;volatile
   156                           
   157                           ;main.c: 35: INTCONbits.GIE = 1;
   158  00005A  8EF2               	bsf	242,7,c	;volatile
   159                           
   160                           ;main.c: 36: INTCONbits.PEIE = 1;
   161  00005C  8CF2               	bsf	242,6,c	;volatile
   162  00005E                     l25:
   163  00005E  D7FF               	goto	l25
   164  000060                     __end_of_main:
   165                           	opt callstack 0
   166                           
   167 ;; *************** function _TMR1Int *****************
   168 ;; Defined at:
   169 ;;		line 11 in file "main.c"
   170 ;; Parameters:    Size  Location     Type
   171 ;;		None
   172 ;; Auto vars:     Size  Location     Type
   173 ;;		None
   174 ;; Return value:  Size  Location     Type
   175 ;;                  1    wreg      void 
   176 ;; Registers used:
   177 ;;		wreg, status,2, status,0
   178 ;; Tracked objects:
   179 ;;		On entry : 0/0
   180 ;;		On exit  : 0/0
   181 ;;		Unchanged: 0/0
   182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   183 ;;      Params:         0       0       0       0       0       0       0
   184 ;;      Locals:         0       0       0       0       0       0       0
   185 ;;      Temps:          1       0       0       0       0       0       0
   186 ;;      Totals:         1       0       0       0       0       0       0
   187 ;;Total ram usage:        1 bytes
   188 ;; Hardware stack levels used:    1
   189 ;; This function calls:
   190 ;;		Nothing
   191 ;; This function is called by:
   192 ;;		Interrupt level 2
   193 ;; This function uses a non-reentrant model
   194 ;;
   195                           
   196                           	psect	intcode
   197  000008                     __pintcode:
   198                           	opt callstack 0
   199  000008                     _TMR1Int:
   200                           	opt callstack 30
   201                           
   202                           ;incstack = 0
   203  000008  8202               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   204  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   205                           
   206                           	psect	intcode_body
   207  000012                     __pintcode_body:
   208                           	opt callstack 30
   209  000012                     int_func:
   210                           	opt callstack 30
   211  000012  0006               	pop		; remove dummy address from shadow register refresh
   212                           
   213                           ;main.c: 13: if (PIR1bits.TMR1IF && PIE1bits.TMR1IE){
   214  000014  B09E               	btfsc	158,0,c	;volatile
   215  000016  A09D               	btfss	157,0,c	;volatile
   216  000018  D010               	goto	i2l20
   217                           
   218                           ;main.c: 14: PIR1bits.TMR1IF = 0;
   219  00001A  909E               	bcf	158,0,c	;volatile
   220                           
   221                           ;main.c: 15: TMR1 = 0x8000;
   222  00001C  0E80               	movlw	128
   223  00001E  6ECF               	movwf	207,c	;volatile
   224  000020  0E00               	movlw	0
   225  000022  6ECE               	movwf	206,c	;volatile
   226                           
   227                           ;main.c: 16: LATBbits.LATB0 = !LATBbits.LATB0;
   228  000024  B08A               	btfsc	138,0,c	;volatile
   229  000026  D003               	goto	i2u3_40
   230  000028  6A01               	clrf	??_TMR1Int^0,c
   231  00002A  2A01               	incf	??_TMR1Int^0,f,c
   232  00002C  D001               	goto	i2u4_48
   233  00002E                     i2u3_40:
   234  00002E  6A01               	clrf	??_TMR1Int^0,c
   235  000030                     i2u4_48:
   236  000030  508A               	movf	138,w,c	;volatile
   237  000032  1801               	xorwf	??_TMR1Int^0,w,c
   238  000034  0BFE               	andlw	-2
   239  000036  1801               	xorwf	??_TMR1Int^0,w,c
   240  000038  6E8A               	movwf	138,c	;volatile
   241  00003A                     i2l20:
   242  00003A  9202               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   243  00003C  0011               	retfie		f
   244  00003E                     __end_of_TMR1Int:
   245                           	opt callstack 0
   246  0000                     
   247                           	psect	rparam
   248  0000                     
   249                           	psect	temp
   250  000002                     btemp:
   251                           	opt callstack 0
   252  000002                     	ds	1
   253  0000                     int$flags	set	btemp
   254  0000                     wtemp8	set	btemp+1
   255  0000                     ttemp5	set	btemp+1
   256  0000                     ttemp6	set	btemp+4
   257  0000                     ttemp7	set	btemp+8
   258                           tosu	equ	0xFFF
   259                           tosh	equ	0xFFE
   260                           tosl	equ	0xFFD
   261                           stkptr	equ	0xFFC
   262                           pclatu	equ	0xFFB
   263                           pclath	equ	0xFFA
   264                           pcl	equ	0xFF9
   265                           tblptru	equ	0xFF8
   266                           tblptrh	equ	0xFF7
   267                           tblptrl	equ	0xFF6
   268                           tablat	equ	0xFF5
   269                           prodh	equ	0xFF4
   270                           prodl	equ	0xFF3
   271                           indf0	equ	0xFEF
   272                           postinc0	equ	0xFEE
   273                           postdec0	equ	0xFED
   274                           preinc0	equ	0xFEC
   275                           plusw0	equ	0xFEB
   276                           fsr0h	equ	0xFEA
   277                           fsr0l	equ	0xFE9
   278                           wreg	equ	0xFE8
   279                           indf1	equ	0xFE7
   280                           postinc1	equ	0xFE6
   281                           postdec1	equ	0xFE5
   282                           preinc1	equ	0xFE4
   283                           plusw1	equ	0xFE3
   284                           fsr1h	equ	0xFE2
   285                           fsr1l	equ	0xFE1
   286                           bsr	equ	0xFE0
   287                           indf2	equ	0xFDF
   288                           postinc2	equ	0xFDE
   289                           postdec2	equ	0xFDD
   290                           preinc2	equ	0xFDC
   291                           plusw2	equ	0xFDB
   292                           fsr2h	equ	0xFDA
   293                           fsr2l	equ	0xFD9
   294                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      1       1
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR1Int in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR1Int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR1Int in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR1Int in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR1Int in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR1Int in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR1Int in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _TMR1Int                                              1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _TMR1Int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7E      1       1       1        0.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Feb 04 14:38:25 2021

                     l25 005E              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_OSC$XT 000000             __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     i2l20 003A  
                   _TMR1 000FCE          __end_of_TMR1Int 003E                     _main 003E  
                   btemp 0002                     start 000E            __CFG_IESO$OFF 000000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000                    ?_main 0001  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000           __CFG_BOREN$OFF 000000  
                  ttemp5 0003                    ttemp6 0006                    ttemp7 000A  
                  wtemp8 0003          __initialization 0060             __end_of_main 0060  
                 ??_main 0002            __activetblptr 000000                ??_TMR1Int 0001  
                 i2u3_40 002E                   i2u4_48 0030           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000               __accesstop 0080  __end_of__initialization 0060  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
                _TMR1Int 0008                  __Hparam 0000                  __Lparam 0000  
                __pcinit 0060                  __ramtop 0600                  __ptext0 003E  
              _T1CONbits 000FCD           __pintcode_body 0012     end_of_initialization 0060  
                int_func 0012                _TRISBbits 000F93      start_initialization 0060  
       __CFG_LPT1OSC$OFF 000000                 ?_TMR1Int 0001        __CFG_CCP2MX$PORTC 000000  
              __pintcode 0008                 _LATBbits 000F8A                 _PIE1bits 000F9D  
               _PIR1bits 000F9E         __CFG_WDTPS$32768 000000         __size_of_TMR1Int 0036  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 0022  
               int$flags 0002               _INTCONbits 000FF2                 intlevel2 0000  
